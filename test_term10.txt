let tail l = case l of Cons x xs -> xs
    zipWith f xs ys =
      case xs of
        Nil -> Nil []
        Cons x xs' ->
          case ys of
            Nil -> Nil []
            Cons y ys' -> Cons [f x y, zipWith f xs' ys']
    fibs = Cons [1, Cons [1,
        zipWith (\x y -> x + y) fibs (tail fibs)
      ]]
    ix l i = case l of
      Cons x xs -> if i == 0 then x else ix xs (i - 1)
in Left [ix fibs 100000]
